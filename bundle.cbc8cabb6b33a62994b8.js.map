{"version":3,"file":"bundle.cbc8cabb6b33a62994b8.js","mappings":";;AAOA;AACA;AAEA;;ACYA;AACA;AAaA;;;;;;AC3BA;AASA;AACA;;;;;;;;;;;;AAgBA;;;;;;;;;;;;AAYA;AAQA;;;;;;;;;;;ACjDA","sources":["webpack://@digicatapult/veritable-portal/./node_modules/@digicatapult/ui-component-library/lib/Grid/GridPanel.js","webpack://@digicatapult/veritable-portal/./node_modules/@digicatapult/ui-component-library/lib/Grid/index.js","webpack://@digicatapult/veritable-portal/./node_modules/@digicatapult/ui-component-library/lib/AppBar/common.js","webpack://@digicatapult/veritable-portal/./node_modules/@digicatapult/ui-component-library/lib/AppBar/index.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport styled from 'styled-components';\n// TODO remove this, just to prove that ts extension works.\nconst Panel = ({ children, ...props }) => {\n    return _jsx(Wrapper, { ...props, children: children });\n};\nconst Wrapper = styled('div') `\n  grid-area: ${({ area }) => area};\n  ${({ justifySelf }) => (justifySelf ? `justify-self: ${justifySelf}` : '')};\n`;\nexport default Panel;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport styled from 'styled-components';\nimport Panel from './GridPanel.js';\nconst Grid = Object.assign((propsWithC) => {\n    const { children, ...props } = propsWithC;\n    return _jsx(Wrapper, { ...props, children: children });\n}, {\n    Panel,\n});\nGrid.Panel = Panel;\nconst interpolateLayout = ({ areas, rows, columns, gap, alignItems, }) => {\n    return `\n    grid-template-areas: ${areas.map((row) => `\"${row.join(' ')}\"`).join('\\n')};\n    grid-template-rows: ${rows.join(' ')};\n    grid-template-columns: ${columns.join(' ')};\n    gap: ${gap || '0px'};\n    ${alignItems ? `align-items: ${alignItems};` : ''}\n\n  `;\n};\nconst Wrapper = styled('div') `\n  display: grid;\n  ${interpolateLayout}\n  ${({ byWidth }) => {\n    const entries = byWidth\n        ? byWidth.map(({ minWidth, ...props }) => {\n            return `\n        @media (min-width: ${minWidth}px) {\n          ${interpolateLayout(props)}\n        }\n      `;\n        })\n        : [];\n    return entries.join('\\n');\n}}\n`;\nexport default Grid;\n","import styled from 'styled-components';\n// TODO props per dom element as well as all for appbar\n// TODO abstract into small component for reusing?\nconst Wrapper = styled('div') `\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  box-sizing: border-box;\n  transition: box-shadow 1s cubic-bezier(0.8, 1, 0.2, 1) 3s;\n  ${({ shadow, width, color, theme }) => `\n    width: ${width || '100%'};\n    box-shadow: ${shadow || false\n    ? '0px 3px 5px -2px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);'\n    : 'none'};\n    background-color: ${color || theme?.primary || '#FFFE'};\n    color: ${theme?.accent || '#000'};\n  `}\n`;\nconst ToolBar = styled('ul') `\n  ${({ fixed, direction }) => `\n    position: ${fixed ? 'fixed' : 'relative'};\n    flex-direction: ${direction || 'row'};\n  `}\n  padding: 0px 25px;\n  margin: 0;\n  list-style-type: none;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  height: 100%;\n  min-height: 74px;\n  gap: 10px;\n  padding-left: 54px;\n`;\nconst Link = styled('a') `\n  display: inline-block;\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  color: inherit;\n  font-family: Roboto;\n  font-weight: 700;\n  padding: 0 15px;\n  font-size: 1em;\n  line-height: 74px;\n\n  ${({ active, theme }) => active\n    ? `\n      margin-top: 4px;\n      background: linear-gradient(360deg, #DFE667 -408.97%, rgba(223, 230, 103, 0) 78.21%);\n      border-bottom: 4px solid ${theme?.accent || '#000'}\n    `\n    : ``}\n`;\nconst Li = styled('li') `\n  display: block;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  cursor: pointer;\n  transition: all 0.5s;\n\n  &:hover {\n    background-color: rgba(40, 30, 30, 0.1);\n  }\n`;\nexport { Li, ToolBar, Wrapper, Link };\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { Li, Link, ToolBar, Wrapper } from './common.js';\nconst Item = ({ children, ...props }) => (_jsx(Li, { children: _jsx(Link, { href: \"#\", ...props, children: children }) }));\n// TODO update to use grid comopnent\n// TODO move to separate components in case this could be reused\nconst AppBar = ({ children, ...props }) => (_jsx(Wrapper, { ...props, children: _jsx(ToolBar, { children: React.Children.map(children, (child) => {\n            if (child.props)\n                return React.cloneElement(child, props);\n        })?.filter(Boolean) }) }));\nAppBar.Item = Item;\nexport default AppBar;\n"],"names":[],"sourceRoot":""}